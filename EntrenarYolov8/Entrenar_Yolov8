from ultralytics import YOLO
import torch

def main():
    # Verificaci√≥n de disponibilidad de CUDA
    print("Is CUDA available: ", torch.cuda.is_available())
    print("Number of GPUs: ", torch.cuda.device_count())
    print("CUDA version: ", torch.version.cuda)
    if torch.cuda.is_available():
        print("GPU Name: ", torch.cuda.get_device_name(0))
       # torch.backends.cudnn.enabled = False # Si no me tira NAN
    else:
        print("No CUDA GPUs are available")

    # Entrenamiento del modelo
    try:
        model = YOLO("yolov8s.yaml")  # build a new model from scratch
        #model = YOLO("EntrenarYolov8\SantaIsabel.pt")  # load a pretrained model (recommended for training)
        #model = YOLO(r"yolov8s.yaml").load(r"Sistema-De-Conteo-De-Ganado\EntrenarYolov8\SantaIsabel.pt")  # build from YAML and transfer weights
        print("Modelo Cargado")
        model.train(data=r"C:\Users\Manuel\Desktop\Carpeta Visual\Sistema-De-Conteo-De-Ganado\EntrenarYolov8\config.yaml",device='cuda', epochs=500, patience=30)
    except Exception as e:
        print(f"Error during training: {e}")

if __name__ == '__main__':
    main()
